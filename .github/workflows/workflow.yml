name: Workflow

on:
  push:
    branches:
      - '*'

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    environment: ${{ github.ref_name }}

    env:
      DEPLOY_HOST: ${{ vars.DEPLOY_HOST }}
      DEPLOY_USER: ${{ vars.DEPLOY_USER }}
      DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
      DEPLOY_LOCAL_DIR: ${{ vars.DEPLOY_LOCAL_DIR || './' }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      DEPLOY_MIRROR: ${{ vars.DEPLOY_MIRROR || 'true' }}
      DEPLOY_PORT: ${{ vars.DEPLOY_PORT || '22' }}
      DEPLOY_METHOD: ${{ vars.DEPLOY_METHOD }}
      BUILD_COMMAND: ${{ vars.BUILD_COMMAND }}

    steps:
      - uses: actions/checkout@v4

      - name: BUILD
        if: ${{ env.BUILD_COMMAND != '' }}
        shell: bash
        run: |
          set -e
          npm ci
          $BUILD_COMMAND
          
      - name: FTP DEPLOY
        if: ${{ env.DEPLOY_METHOD == 'FTP' }}
        shell: bash
        run: |
          sudo apt-get install -y lftp

          DELETE=""
          if [ "${DEPLOY_MIRROR}" = "true" ]; then
            DELETE="--delete"
          fi

          lftp -u "$DEPLOY_USER,$DEPLOY_KEY" "$DEPLOY_HOST" -e "
            mirror -R \
              --parallel=4 \
              --verbose \
              $DELETE \
              -x '(^|/)\.' \
              $DEPLOY_LOCAL_DIR \
              $DEPLOY_PATH ;
            quit
          "

      - name: RSYNC DEPLOY
        if: ${{ env.DEPLOY_METHOD == 'RSYNC' }}
        shell: bash
        run: |
          set -euo pipefail

          echo "$DEPLOY_KEY" > key.pem
          chmod 600 key.pem

          DELETE=""
          if [ "${DEPLOY_MIRROR}" = "true" ]; then
            DELETE="--delete"
          fi

          rsync -az --progress $DELETE \
            -e "ssh -i key.pem -o StrictHostKeyChecking=no -p $DEPLOY_PORT" \
            "$DEPLOY_LOCAL_DIR/" "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH"

          rm -f key.pem

      - name: GIT DEPLOY
        if: ${{ env.DEPLOY_METHOD == 'GIT' }}
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        shell: bash
        run: |
          set -euo pipefail

          echo "$DEPLOY_KEY" > key.pem
          chmod 600 key.pem

          ssh -i key.pem -o StrictHostKeyChecking=no -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST "
            cd $DEPLOY_PATH
            if [ ! -d '.git' ]; then
              git clone git@github.com:${GITHUB_REPOSITORY}.git .
            else
              git fetch git@github.com:${GITHUB_REPOSITORY}.git ${GITHUB_REF_NAME}
              git reset --hard FETCH_HEAD
            fi
          "
          
          rm -f key.pem
